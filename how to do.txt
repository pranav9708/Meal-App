To retrieve meal details from the MealDB API based on user input, you can follow these general steps:

Create a search bar element in your web page where users can input their search query.

Use JavaScript to listen for when the user submits the form (by clicking a search button or pressing Enter, for example).

When the form is submitted, extract the user's search query from the input field.

Make a GET request to the MealDB API using the search query as a parameter. You can use the fetch() function in JavaScript to make the request.

When the API returns the data, parse it into a JavaScript object using JSON.parse(). The object should contain an array of meal objects.

Use JavaScript to display the meal data on your web page. You can access the data for each meal by iterating over the array of meal objects and accessing the properties you want to display (such as the meal name, instructions, and image URL).

Here's some sample code to get you started:

javascript
Copy code
const searchForm = document.querySelector('#search-form');
const searchInput = document.querySelector('#search-input');
const searchResults = document.querySelector('#search-results');

searchForm.addEventListener('submit', async (e) => {
  e.preventDefault(); // prevent the default form submission behavior

  const query = searchInput.value;
  const response = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?s=${query}`);
  const data = await response.json();
  const meals = data.meals;

  searchResults.innerHTML = ''; // clear previous search results

  if (meals) {
    meals.forEach((meal) => {
      const mealCard = document.createElement('div');
      mealCard.classList.add('meal-card');
      mealCard.innerHTML = `
        <img src="${meal.strMealThumb}" alt="${meal.strMeal}">
        <h2>${meal.strMeal}</h2>
        <p>${meal.strInstructions}</p>
      `;
      searchResults.appendChild(mealCard);
    });
  } else {
    searchResults.innerHTML = 'No results found';
  }
});
This code assumes you have HTML elements with IDs of search-form, search-input, and search-results, and that you have some CSS styling to make the meal-card class look like a card. You may need to modify the code to fit your specific use case.




Pranav
can you help with html codealso
Sure, here's some sample HTML code that you can use as a starting point:

html
Copy code
<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Meal Search</title>
  <style>
    /* Add some basic styles for the search bar and results */
    #search-form {
      display: flex;
      justify-content: center;
      margin: 20px 0;
    }

    #search-input {
      width: 300px;
      padding: 10px;
      font-size: 16px;
      border: 2px solid #ccc;
      border-radius: 4px;
      margin-right: 10px;
    }

    #search-btn {
      background-color: #4CAF50;
      color: white;
      padding: 10px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }

    #search-btn:hover {
      background-color: #3e8e41;
    }

    #search-results {
      display: flex;
      flex-wrap: wrap;
      justify-content: space-around;
    }

    .meal-card {
      width: 300px;
      margin: 10px;
      padding: 10px;
      border: 1px solid #ccc;
      border-radius: 4px;
      box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);
    }

    .meal-card img {
      width: 100%;
      border-radius: 4px;
      margin-bottom: 10px;
    }

    .meal-card h2 {
      font-size: 24px;
      margin-bottom: 10px;
    }

    .meal-card p {
      font-size: 16px;
    }
  </style>
</head>
<body>
  <form id="search-form">
    <input type="text" id="search-input" placeholder="Search for a meal">
    <button type="submit" id="search-btn">Search</button>
  </form>
  <div id="search-results"></div>
  <script src="app.js"></script>
</body>
</html>
This code creates a simple search form with an input field and a button, and a div element to display the search results. It also includes some basic styles for the search bar and results. Note that you will need to include a reference to your JavaScript file (in this case, app.js) in the <head> section of your HTML file.